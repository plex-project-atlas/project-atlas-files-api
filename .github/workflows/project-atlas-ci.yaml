name: project-atlas-ci
on:   [push]

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  python-code-check:
    name:    Source code analysis...
    runs-on: ubuntu-latest
    steps:
      - name: Checking-out commit code...
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Installing OS prerequisites...
        run:  sudo apt-get update && sudo apt-get install -y --no-install-recommends libmagic1
      - name: Setting-up Python environment...
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Creating test directories...
        run:  mkdir -p /tmp/pytest
      - name: Installing python dependencies...
        run:  |
          python -m pip install --no-cache-dir --upgrade pip
          pip install --no-cache-dir --upgrade -r builder/requirements-api.txt
          pip install --no-cache-dir --upgrade -r builder/requirements-tests.txt
      - name: Running unit tests...
        working-directory: ./app
        run:  pytest -v --basetemp /tmp/pytest --cov --cov-report xml
        env:
          FILES_API_PRIVATE_JWK: ${{ secrets.FILES_API_PRIVATE_JWK }}
          FILES_API_PUBLIC_JWK:  ${{ secrets.FILES_API_PUBLIC_JWK }}
          FILES_API_ALLOWED_AUD: '["sample-platform"]'
          FILES_API_ALLOWED_SUB: '["sample-id"]'
          FILES_API_ARCHIVE_DIR: "/tmp/pytest"
          FILES_API_FILES_DIR:   "/tmp/pytest"
      - name: SonarCloud scan...
        working-directory: ./app
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}

  docker-build-image:
    name:    Building/pushing docker image [${{ matrix.os }}]...
    needs:   python-code-check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: ['debian', 'alpine']
    steps:
      - name: Checking-out commit code...
        uses: actions/checkout@v3
      - name: Logging-in to DockerHub...
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          no-cache: true
          file: builder/Dockerfile.${{ matrix.os }}
          tags: >
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}-${{ matrix.os }}
          push: true
